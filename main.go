//go:generate go install -v github.com/josephspurrier/goversioninfo/cmd/goversioninfo
//go:generate goversioninfo -icon=res/papp.ico
package main

import (
	"os"
	"runtime"
	"strings"

	. "github.com/portapps/portapps"
	"github.com/portapps/portapps/pkg/utl"
)

var (
	app *App
)

func init() {
	var err error

	// Init app
	if app, err = New("intellij-idea-community-portable", "IntelliJ IDEA Community"); err != nil {
		Log.Fatal().Err(err).Msg("Cannot initialize application. See log file for more info.")
	}
}

func main() {
	ideaExe := "idea.exe"
	if runtime.GOARCH == "amd64" {
		ideaExe = "idea64.exe"
	}

	utl.CreateFolder(app.DataPath)
	app.Process = utl.PathJoin(app.AppPath, "bin", ideaExe)
	app.WorkingDir = utl.PathJoin(app.AppPath, "bin")

	// override idea.properties
	ideaPropContent := strings.Replace(`# DO NOT EDIT! AUTOMATICALLY GENERATED BY PORTAPPS.
idea.config.path={{ DATA_PATH }}/config
idea.system.path={{ DATA_PATH }}/system
idea.plugins.path={{ DATA_PATH }}/plugins
idea.log.path={{ DATA_PATH }}/log`, "{{ DATA_PATH }}", utl.FormatUnixPath(app.DataPath), -1)

	ideaPropPath := utl.PathJoin(app.DataPath, "idea.properties")
	if err := utl.CreateFile(ideaPropPath, ideaPropContent); err != nil {
		Log.Fatal().Err(err).Msg("Cannot write idea.properties")
	}

	// https://www.jetbrains.com/help/idea/tuning-intellij-idea.html#configure-platform-properties
	utl.OverrideEnv("IDEA_PROPERTIES", ideaPropPath)

	app.Launch(os.Args[1:])
}
